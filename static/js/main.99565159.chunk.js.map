{"version":3,"sources":["reportWebVitals.js","ebconfig.js","components/pages/reservations/Reservation.js","components/pages/utils/DataLoader.js","components/pages/utils/DatePickerFr.js","context/DateContext.js","components/AddButton.js","components/pages/reservations/ListReservations.js","context/ThemeContext.js","components/pages/utils/range.js","components/pages/utils/stringToColor.js","components/pages/calendar/year/YearMonthDay.js","components/pages/calendar/year/YearSmallDays.js","components/pages/calendar/year/YearMonth.js","components/pages/calendar/year/Year.js","components/pages/calendar/month/Month.js","components/pages/calendar/Calendar.js","components/pages/calendar/Agenda.js","components/allRoutes.js","components/pages/calendar/Controls.js","components/menu/Menu.js","components/pages/utils/momentLocaleFr.js","context/provider/ThemeContextProvider.js","context/provider/DateContextProvider.js","components/App.js","Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ebconfig","Reservation","reservation","useState","deleteModalOpen","setDeleteModalOpen","validModalOpen","setValidModalOpen","useEasybase","sync","deleteRecord","reservationActions","isconfirmed","onClick","className","style","marginLeft","marginRight","verticalAlign","tooltip","actions","closeIcon","revealIcon","textClassName","title","username","moment","datebegin","format","dateend","flat","node","waves","type","a","record","bottomSheet","fixedFooter","header","open","options","onCloseEnd","DataLoader","active","color","flashing","DatePickerFr","onSelect","id","autoClose","container","defaultDate","disableDayFn","disableWeekends","events","firstDay","i18n","cancel","clear","done","months","monthsShort","nextMonth","previousMonth","weekdays","weekdaysAbbrev","weekdaysShort","isRTL","maxDate","minDate","onClose","onDraw","onOpen","parse","setDefaultDate","showClearBtn","showDaysInNextAndPreviousMonths","showMonthAfterYear","yearRange","DateContext","React","createContext","beginDate","endDate","isLoadingEvents","AddButton","isLoading","setIsloading","useContext","setBeginDate","setEndDate","Frame","nameRef","createRef","addResa","newName","current","value","verifyDates","push","result","find","resa","isBetween","M","toast","html","isAfter","trigger","floating","fab","direction","icon","large","modal","label","ref","error","success","validate","date","position","bottom","right","ListReservations","configureFrame","useEffect","tableName","limit","map","index","m","s","ThemeContext","period","currentDate","setTheme","range","size","startAt","Array","keys","i","stringToColour","str","hash","colour","length","charCodeAt","toString","substr","YearMonthDay","month","day","year","parseInt","subtract","getClassNameToday","isSame","backgroundColor","YearSmallDays","smallDays","firstDayOfMonth","weekday","slice","concat","YearMonth","days","daysInMonth","Year","Month","isReserved","isToday","number","isInMonth","daysOfMonth","countPreviousMonth","daysOfPreviousMonthFinal","daysOfMonthBefore","daysOfMonthFinal","forEach","key","getDaysOfMonth","data-field","week","Calendar","Agenda","routes","path","exact","component","Controls","setCurrentDate","newDate","useLocation","pathname","height","lineHeight","add","Menu","setPeriod","alignLinks","brand","menuIcon","fixed","offLabel","onChange","onLabel","checked","to","locale","split","monthsParseExact","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","mm","h","hh","d","dd","MM","y","yy","dayOfMonthOrdinalParse","ordinal","meridiemParse","isPM","input","charAt","meridiem","hours","minutes","isLower","dow","doy","ThemeContextProvider","children","Provider","DateContextProvider","setIsLoadingEvents","setSync","setEvents","Query","useFrameEffect","queryName","res","App","version","padding","route","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99565159.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable */\r\n// WARNING: Do not edit this file\r\n\r\nconst ebconfig = {\r\n  \"integration\": \"react-1-ZEWiLzgRlUVBOSIka2ff-oM1JKZb7Wz11IqDlU4ejcDW5n-dyB9nvi-2UZhKGlX62e5O25MzT4jf6nvYtMjwcw4Z52ddt0ZLVlmbR4IJVS-tyn1ah2ARqiIv\",\r\n  \"tt\": \"tt-1-MEoT3ua1cNGjjdS6VPJz9M3H5MAwSnWqkY2dsyxNn58=\",\r\n  \"version\": \"2020-11-20\"\r\n}\r\n\r\nexport default ebconfig;","import React, { useState } from \"react\";\nimport { Button, Card, Icon, Modal } from \"react-materialize\";\nimport moment from \"moment\";\nimport { useEasybase } from \"easybase-react\";\n// import ThemeContext from \"../../../context/ThemeContext\";\n\nconst Reservation = ({ reservation }) => {\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const [validModalOpen, setValidModalOpen] = useState(false);\n  // const { setCurrentDate } = useContext(ThemeContext);\n  const { sync, deleteRecord } = useEasybase();\n\n  const validateButton = !reservation.isconfirmed ? (\n    <Button\n      key=\"3\"\n      onClick={() => setValidModalOpen(true)}\n      className=\"waves-effect waves-white btn-flat light-green white-text\"\n    >\n      <Icon style={{ marginLeft: \"-10px\", marginRight: \"10px\" }}>check</Icon>\n      <span style={{ verticalAlign: \"super\" }}>Valider</span>\n    </Button>\n  ) : null;\n\n  const reservationActions = [\n    // <Button\n    //   key=\"1\"\n    //   onClick={() => {\n    //     console.log(\"click\");\n    //     setCurrentDate(moment());\n    //   }}\n    //   className=\"waves-effect waves-white btn-flat teal lighten-2 white-text\"\n    // >\n    //   <Icon style={{ marginLeft: \"-10px\", marginRight: \"10px\" }}>\n    //     chevron_right\n    //   </Icon>\n    //   <span style={{ verticalAlign: \"super\" }}>Voir</span>\n    // </Button>,\n    validateButton,\n    <Button\n      key=\"2\"\n      onClick={() => setDeleteModalOpen(true)}\n      className=\"waves-effect waves-white btn-flat orange lighten-1 white-text right delete-btn\"\n      tooltip=\"Supprimer\"\n    >\n      <Icon>delete</Icon>\n    </Button>,\n  ];\n\n  return (\n    <>\n      <Card\n        actions={reservationActions}\n        className={\n          reservation.isconfirmed\n            ? \"blue-grey darken-2 reservation-card\"\n            : \"blue-grey darken-3 reservation-card\"\n        }\n        closeIcon={<Icon>close</Icon>}\n        revealIcon={<Icon>more_vert</Icon>}\n        textClassName=\"white-text\"\n        title={\n          reservation.isconfirmed ? (\n            <>\n              <Icon className=\"text-lighten-1 green-text reservation-icon\">\n                event_available\n              </Icon>\n              <span className=\"name\">{reservation.username}</span>\n              <span className=\"text-lighten-1 green-text status\">Vérifié</span>\n            </>\n          ) : (\n            <>\n              <Icon className=\"text-lighten-1 lime-text reservation-icon\">\n                access_time\n              </Icon>\n              <span className=\"name\">{reservation.username}</span>\n              <span className=\"text-lighten-1 lime-text status\">\n                En attente\n              </span>\n            </>\n          )\n        }\n      >\n        {/*<Badge*/}\n        {/*  className={*/}\n        {/*    reservation.isconfirmed ? \"green white-text\" : \"lime white-text\"*/}\n        {/*  }*/}\n        {/*>*/}\n        {/*  {reservation.isconfirmed ? (*/}\n        {/*    <>*/}\n        {/*      <Icon>event_available</Icon>*/}\n        {/*      <span className=\"status\">Vérifié</span>*/}\n        {/*    </>*/}\n        {/*  ) : (*/}\n        {/*    <>*/}\n        {/*      <Icon>access_time</Icon>*/}\n        {/*      <span className=\"status\">En attente</span>*/}\n        {/*    </>*/}\n        {/*  )}*/}\n        {/*</Badge>*/}\n        <p>Du {moment(reservation.datebegin).format(\"DD MMMM YYYY\")}</p>\n        <p>Au {moment(reservation.dateend).format(\"DD MMMM YYYY\")}</p>\n      </Card>\n      <Modal\n        actions={[\n          <Button\n            flat\n            onClick={() => {\n              setDeleteModalOpen(false);\n            }}\n            node=\"button\"\n            waves=\"purple\"\n          >\n            Annuler\n          </Button>,\n          <Button\n            type=\"submit\"\n            node=\"button\"\n            waves=\"green\"\n            onClick={async () => {\n              await deleteRecord({ record: reservation });\n              await sync();\n              setDeleteModalOpen(false);\n            }}\n          >\n            Confirmer\n          </Button>,\n        ]}\n        bottomSheet={false}\n        fixedFooter\n        header=\"Supprimer\"\n        open={deleteModalOpen}\n        options={{\n          onCloseEnd: () => setDeleteModalOpen(false),\n        }}\n      >\n        Etes-vous sûr de vouloir supprimer cette réservation ?{\" \"}\n      </Modal>\n      <Modal\n        actions={[\n          <Button\n            flat\n            onClick={() => {\n              setValidModalOpen(false);\n            }}\n            node=\"button\"\n            waves=\"purple\"\n          >\n            Annuler\n          </Button>,\n          <Button\n            type=\"submit\"\n            node=\"button\"\n            waves=\"green\"\n            onClick={async () => {\n              reservation.isconfirmed = true;\n              await sync();\n              setValidModalOpen(false);\n            }}\n          >\n            Confirmer\n          </Button>,\n        ]}\n        bottomSheet={false}\n        fixedFooter\n        header=\"Valider\"\n        open={validModalOpen}\n        options={{\n          onCloseEnd: () => setValidModalOpen(false),\n        }}\n      >\n        Etes-vous sûr de vouloir valider cette réservation ?{\" \"}\n      </Modal>\n    </>\n  );\n};\n\nexport default Reservation;\n","import React from \"react\";\r\nimport { Preloader, Row } from \"react-materialize\";\r\n\r\nconst DataLoader = () => {\r\n  return (\r\n    <Row className=\"loader-wrapper center-align\">\r\n      <Preloader active color=\"blue\" flashing />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DataLoader;\r\n","import React from \"react\";\r\nimport { DatePicker } from \"react-materialize\";\r\n\r\nconst DatePickerFr = ({ title, onSelect }) => {\r\n  return (\r\n    <DatePicker\r\n      id={title}\r\n      options={{\r\n        autoClose: true,\r\n        container: \"body\",\r\n        defaultDate: null,\r\n        disableDayFn: null,\r\n        disableWeekends: false,\r\n        events: [],\r\n        firstDay: 0,\r\n        format: \"dddd d mmmm, yyyy\",\r\n        i18n: {\r\n          cancel: \"Annuler\",\r\n          clear: \"Effacer\",\r\n          done: \"Ok\",\r\n          months: [\r\n            \"Janvier\",\r\n            \"Février\",\r\n            \"Mars\",\r\n            \"Avril\",\r\n            \"Mai\",\r\n            \"Juin\",\r\n            \"Juillet\",\r\n            \"Août\",\r\n            \"Septembre\",\r\n            \"Octobre\",\r\n            \"Novembre\",\r\n            \"Décembre\",\r\n          ],\r\n          monthsShort: [\r\n            \"Jan\",\r\n            \"Fev\",\r\n            \"Mar\",\r\n            \"Avr\",\r\n            \"Mai\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Aut\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\",\r\n          ],\r\n          nextMonth: \"›\",\r\n          previousMonth: \"‹\",\r\n          weekdays: [\r\n            \"Dimanche\",\r\n            \"Lundi\",\r\n            \"Mardi\",\r\n            \"Mercredi\",\r\n            \"Jeudi\",\r\n            \"Vendredi\",\r\n            \"Samedi\",\r\n          ],\r\n          weekdaysAbbrev: [\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"],\r\n          weekdaysShort: [\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"],\r\n        },\r\n        isRTL: false,\r\n        maxDate: null,\r\n        minDate: null,\r\n        onClose: null,\r\n        onDraw: null,\r\n        onOpen: null,\r\n        onSelect: onSelect,\r\n        parse: null,\r\n        setDefaultDate: false,\r\n        showClearBtn: false,\r\n        showDaysInNextAndPreviousMonths: false,\r\n        showMonthAfterYear: false,\r\n        yearRange: 10,\r\n      }}\r\n    >\r\n      {title}\r\n    </DatePicker>\r\n  );\r\n};\r\n\r\nexport default DatePickerFr;\r\n","import React from \"react\";\r\n\r\nconst DateContext = React.createContext({\r\n  beginDate: null,\r\n  endDate: null,\r\n  isLoadingEvents: false,\r\n  events: [],\r\n});\r\n\r\nexport default DateContext;\r\n","import React, { useContext, useState } from \"react\";\nimport { Button, Icon, Modal, TextInput } from \"react-materialize\";\nimport DatePickerFr from \"./pages/utils/DatePickerFr\";\nimport moment from \"moment\";\nimport DataLoader from \"./pages/utils/DataLoader\";\nimport { useEasybase } from \"easybase-react\";\nimport M from \"materialize-css\";\nimport DateContext from \"../context/DateContext\";\n\nconst AddButton = () => {\n  const [isLoading, setIsloading] = useState(false);\n  const { beginDate, setBeginDate, endDate, setEndDate } = useContext(\n    DateContext\n  );\n  const { Frame, sync } = useEasybase();\n  const nameRef = React.createRef();\n\n  const addResa = async () => {\n    const newName = nameRef.current && nameRef.current.value;\n    if (!newName) {\n      nameRef.current.className = \"validate invalid\";\n    } else if (verifyDates()) {\n      setIsloading(true);\n      Frame().push({\n        username: newName,\n        isconfirmed: false,\n        datebegin: beginDate.format(\"YYYY-MM-DD\"),\n        dateend: endDate.format(\"YYYY-MM-DD\"),\n      });\n\n      await sync();\n      setIsloading(false);\n    }\n  };\n\n  const verifyDates = () => {\n    let result = false;\n    if (beginDate && endDate) {\n      const isReserved = Frame().find(\n        (resa) =>\n          beginDate.isBetween(moment(resa.datebegin), moment(resa.dateend)) ||\n          endDate.isBetween(moment(resa.datebegin), moment(resa.dateend))\n      );\n      if (!isReserved) {\n        if (beginDate.isAfter(moment())) {\n          if (!beginDate.isAfter(endDate)) {\n            result = true;\n          } else {\n            M.toast({\n              html: \"La date de fin de peut pas être avant la date de début.\",\n            });\n          }\n        } else {\n          M.toast({\n            html: \"La date de début ne peut pas être avant aujourd'hui.\",\n          });\n        }\n      } else {\n        M.toast({\n          html: \"Déjà réservé.\",\n        });\n      }\n    } else {\n      !beginDate &&\n        M.toast({\n          html: \"Hop hop hop, et la date de début là !\",\n        });\n      !endDate &&\n        M.toast({\n          html: \"Hop hop hop, et la date de fin là !\",\n        });\n    }\n    return result;\n  };\n\n  return isLoading ? (\n    <DataLoader />\n  ) : (\n    <Modal\n      id=\"addModal\"\n      header=\"Choix des dates\"\n      trigger={\n        <Button\n          floating\n          fab={{\n            direction: \"left\",\n          }}\n          icon={<Icon>add</Icon>}\n          large\n          node=\"button\"\n          waves=\"light\"\n          className=\"pulse\"\n        />\n      }\n      actions={[\n        <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n          Fermer\n        </Button>,\n      ]}\n    >\n      <TextInput\n        label=\"Prénom\"\n        ref={nameRef}\n        error=\"Oulala tu vas avoir des problèmes !\"\n        success=\"Good to go !\"\n        validate\n      />\n      <DatePickerFr\n        title={\"Date de début\"}\n        onSelect={(date) => setBeginDate(moment(date))}\n      />\n      <DatePickerFr\n        title={\"Date de fin\"}\n        onSelect={(date) => setEndDate(moment(date))}\n      />\n      <Button\n        onClick={addResa}\n        style={{ position: \"absolute\", bottom: \"15px\" }}\n      >\n        Valider\n        <Icon right>send</Icon>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default AddButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useEasybase } from \"easybase-react\";\nimport { Col, Row } from \"react-materialize\";\nimport Reservation from \"./Reservation\";\nimport DataLoader from \"../utils/DataLoader\";\nimport AddButton from \"../../AddButton\";\n\nconst ListReservations = () => {\n  const [isLoading, setIsloading] = useState(true);\n  const { Frame, sync, configureFrame } = useEasybase();\n\n  useEffect(() => {\n    (async () => {\n      setIsloading(true);\n      await configureFrame({ tableName: \"RESERVATION\", limit: null });\n      await sync();\n      setIsloading(false);\n    })();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return isLoading ? (\n    <DataLoader />\n  ) : (\n    <>\n      <Row>\n        {Frame().map((resa, index) => (\n          <Col m={6} s={12} key={index}>\n            <Reservation reservation={resa} />\n          </Col>\n        ))}\n      </Row>\n      <AddButton />\n    </>\n  );\n};\n\nexport default ListReservations;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ThemeContext = React.createContext({\n  period: \"year\",\n  currentDate: moment().date(1),\n  setTheme: () => {},\n});\n\nexport default ThemeContext;\n","const range = (size, startAt = 0) => {\r\n  return size > 0 ? [...Array(size).keys()].map((i) => i + startAt) : [];\r\n};\r\n\r\nexport default range;\r\n","const stringToColour = function (str) {\n  let hash = 0;\n  let colour = \"#\";\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xff;\n    colour += (\"00\" + value.toString(16)).substr(-2);\n  }\n\n  return colour;\n};\n\nexport default stringToColour;\n","import React, { useContext } from \"react\";\nimport ThemeContext from \"../../../../context/ThemeContext\";\nimport moment from \"moment\";\nimport DateContext from \"../../../../context/DateContext\";\nimport { Button } from \"react-materialize\";\nimport stringToColour from \"../../utils/stringToColor\";\n\nconst YearMonthDay = ({ month, day }) => {\n  const { currentDate } = useContext(ThemeContext);\n  const { events } = useContext(DateContext);\n\n  const isToday = () => {\n    return moment({\n      year: currentDate.year(),\n      month: parseInt(moment().month(month).format(\"MM\")) - 1,\n      day: day,\n    }).isSame(moment(), \"day\");\n  };\n\n  const isReserved = () => {\n    const result = events.find((resa) =>\n      moment({\n        year: currentDate.year(),\n        month: parseInt(moment().month(month).format(\"MM\")) - 1,\n        day: day,\n      }).isBetween(\n        moment(resa.datebegin).subtract(\"1\", \"day\"),\n        moment(resa.dateend)\n      )\n    );\n    return result;\n  };\n\n  const resa = isReserved();\n\n  const getClassNameToday = () => {\n    if (isToday()) {\n      if (day >= 10) {\n        return \"day-today double-number\";\n      } else {\n        return \"day-today\";\n      }\n    } else if (resa) {\n      if (day >= 10) {\n        return \"day-reserved double-number\";\n      } else {\n        return \"day-reserved\";\n      }\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <div className=\"day\">\n      {resa ? (\n        <Button\n          className={getClassNameToday()}\n          tooltip={resa.username}\n          style={{ backgroundColor: stringToColour(resa.username) }}\n        >\n          {day}\n        </Button>\n      ) : (\n        <div className={getClassNameToday()}>{day}</div>\n      )}\n    </div>\n  );\n};\n\nexport default YearMonthDay;\n","import React, { useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\n\r\nconst YearSmallDays = ({ month }) => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n\r\n  let smallDays = [\"l\", \"m\", \"m\", \"j\", \"v\", \"s\", \"d\"];\r\n\r\n  const getFirstDayOfMonth = () => {\r\n    return moment({ ...currentDate })\r\n      .month(month)\r\n      .weekday() === 0\r\n      ? 7\r\n      : moment({ ...currentDate })\r\n          .month(month)\r\n          .weekday();\r\n  };\r\n\r\n  const firstDayOfMonth = getFirstDayOfMonth();\r\n  smallDays = smallDays\r\n    .slice(firstDayOfMonth - 1, smallDays.length)\r\n    .concat(smallDays.slice(0, firstDayOfMonth - 1));\r\n\r\n  return (\r\n    <div className=\"header-small-days\">\r\n      {smallDays.map((day, index) => (\r\n        <div key={index} className=\"year-day\">\r\n          {day}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearSmallDays;\r\n","import React, { useContext } from \"react\";\r\nimport { Col } from \"react-materialize\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\nimport range from \"../../utils/range\";\r\nimport YearMonthDay from \"./YearMonthDay\";\r\nimport moment from \"moment\";\r\nimport YearSmallDays from \"./YearSmallDays\";\r\n\r\nconst YearMonth = ({ month }) => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n  const days = range(\r\n    moment({ ...currentDate })\r\n      .month(month)\r\n      .daysInMonth(),\r\n    1\r\n  );\r\n\r\n  return (\r\n    <Col className=\"month\" s={12} m={3}>\r\n      <h4\r\n        className={\r\n          moment().format(\"MMMM\") === month &&\r\n          currentDate.year() === moment().year()\r\n            ? \"capitalize teal-text\"\r\n            : \"capitalize\"\r\n        }\r\n      >\r\n        {month}\r\n      </h4>\r\n      <YearSmallDays month={month} />\r\n      <div className=\"month-days\">\r\n        {days.map((day, index) => (\r\n          <YearMonthDay month={month} day={day} key={index} />\r\n        ))}\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default YearMonth;\r\n","import React, { useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport YearMonth from \"./YearMonth\";\r\nimport { Row } from \"react-materialize\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\n\r\nconst Year = () => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div className=\"year-calendar\">\r\n      <h4 className=\"teal-text\">\r\n        <strong>{currentDate.year()}</strong>\r\n      </h4>\r\n      <Row>\r\n        {moment.months().map((month, index) => (\r\n          <YearMonth month={month} key={index} />\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Year;\r\n","import React, { useContext } from \"react\";\n// import MonthDay from \"./MonthDay\";\nimport range from \"../../utils/range\";\nimport { Table } from \"react-materialize\";\nimport ThemeContext from \"../../../../context/ThemeContext\";\nimport moment from \"moment\";\nimport DateContext from \"../../../../context/DateContext\";\nimport { Button } from \"react-materialize\";\nimport stringToColour from \"../../utils/stringToColor\";\n\nconst Month = () => {\n  const { currentDate } = useContext(ThemeContext);\n  const { events } = useContext(DateContext);\n\n  const month = currentDate.format(\"MMMM\");\n  const year = currentDate.year();\n  const weekdays = moment.weekdays(true);\n  const weekdaysShort = moment.weekdaysShort(true);\n\n  const isReserved = (day) => {\n    const result = events.find((resa) =>\n      moment({\n        year: currentDate.year(),\n        month: parseInt(currentDate.format(\"MM\")) - 1,\n        day: day,\n      }).isBetween(\n        moment(resa.datebegin).subtract(\"1\", \"day\"),\n        moment(resa.dateend)\n      )\n    );\n    return result;\n  };\n\n  const getFirstDayOfMonth = () => {\n    return moment({ ...currentDate })\n      .month(month)\n      .weekday() === 0\n      ? 7\n      : moment({ ...currentDate })\n          .month(month)\n          .weekday();\n  };\n\n  const getDaysOfMonth = () => {\n    let days = [];\n    const indexes = [7, 14, 21, 28, 35, 42];\n    const daysOfMonth = range(currentDate.daysInMonth(), 1);\n    const countPreviousMonth = moment({ ...currentDate })\n      .month(month)\n      .subtract(1, \"month\")\n      .daysInMonth();\n    const firstDayOfMonth = getFirstDayOfMonth();\n    const daysOfPreviousMonth = range(\n      firstDayOfMonth - 1,\n      countPreviousMonth + 2 - firstDayOfMonth\n    );\n    const daysOfPreviousMonthFinal = daysOfPreviousMonth.map((day) => ({\n      isInMonth: false,\n      number: day,\n    }));\n    const daysOfMonthBefore = daysOfMonth.map((day) => ({\n      isInMonth: true,\n      number: day,\n    }));\n    const daysOfMonthFinal = daysOfPreviousMonthFinal.concat(daysOfMonthBefore);\n\n    indexes.forEach((index, key) => {\n      days[key] = daysOfMonthFinal.slice(index - 7, index);\n    });\n\n    return days;\n  };\n\n  const isToday = (day) => {\n    return moment({\n      year: currentDate.year(),\n      month: parseInt(currentDate.format(\"MM\")) - 1,\n      day: day.number,\n    }).isSame(moment(), \"day\");\n  };\n\n  const getClassNameToday = (day) => {\n    let className = \"\";\n    className += day.isInMonth ? \"in-month\" : \"out-of-month\";\n    if (isToday(day)) {\n      className += \" day-today\";\n      if (day.number >= 10) {\n        className += \" double-number\";\n      }\n    } else if (isReserved(day.number)) {\n      if (day.number >= 10) {\n        className += \" day-reserved double-number\";\n      } else {\n        className += \" day-reserved\";\n      }\n    }\n    return className;\n  };\n\n  const days = getDaysOfMonth();\n\n  return (\n    <div className=\"month-calendar\">\n      <h4 className=\"capitalize\">\n        <span\n          className={\n            month === moment().format(\"MMMM\") &&\n            currentDate.year() === moment().year()\n              ? \"amber-text\"\n              : \"teal-text\"\n          }\n        >\n          <strong>{month}</strong>\n        </span>{\" \"}\n        {year}\n      </h4>\n      <Table className=\"centered hide-on-small-only\">\n        <thead>\n          <tr>\n            {weekdays.map((day, index) => (\n              <th data-field=\"day\" key={index} className=\"capitalize\">\n                {day}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {days.map((week, key) => (\n            <tr key={key}>\n              {week.map((day, index) =>\n                isReserved(day.number) ? (\n                  <td key={index}>\n                    <Button\n                      className={getClassNameToday(day)}\n                      tooltip={isReserved(day.number).username}\n                      style={{\n                        backgroundColor: stringToColour(\n                          isReserved(day.number).username\n                        ),\n                      }}\n                      key={index}\n                    >\n                      {day.number}\n                    </Button>\n                  </td>\n                ) : isToday(day) ? (\n                  <td key={index}>\n                    <Button className={getClassNameToday(day)}>\n                      {day.number}\n                    </Button>\n                  </td>\n                ) : (\n                  <td className={getClassNameToday(day)} key={index}>\n                    {day.number}\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <Table className=\"centered hide-on-med-and-up\">\n        <thead>\n          <tr>\n            {weekdaysShort.map((day, index) => (\n              <th data-field=\"day\" key={index} className=\"capitalize\">\n                {day}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {days.map((week, key) => (\n            <tr key={key}>\n              {week.map((day, index) =>\n                isReserved(day.number) ? (\n                  <td key={index}>\n                    <Button\n                      className={getClassNameToday(day)}\n                      tooltip={isReserved(day.number).username}\n                      key={index}\n                    >\n                      {day.number}\n                    </Button>\n                  </td>\n                ) : (\n                  <td className={getClassNameToday(day)} key={index}>\n                    {day.number}\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Month;\n","import React, { useContext } from \"react\";\nimport ThemeContext from \"../../../context/ThemeContext\";\nimport Year from \"./year/Year\";\nimport Month from \"./month/Month\";\nimport AddButton from \"../../AddButton\";\n\nconst Calendar = () => {\n  const { period } = useContext(ThemeContext);\n\n  return (\n    <>\n      <div className={period !== \"year\" ? \"hide\" : \"\"}>\n        <Year />\n      </div>\n      <div className={period !== \"month\" ? \"hide\" : \"\"}>\n        <Month />\n      </div>\n      <AddButton />\n    </>\n  );\n};\n\nexport default Calendar;\n","import React, { useContext } from \"react\";\r\nimport Calendar from \"./Calendar\";\r\nimport DataLoader from \"../utils/DataLoader\";\r\nimport DateContext from \"../../../context/DateContext\";\r\n\r\nconst Agenda = () => {\r\n  const { isLoadingEvents } = useContext(DateContext);\r\n\r\n  return isLoadingEvents ? <DataLoader /> : <Calendar />;\r\n};\r\n\r\nexport default Agenda;\r\n","import ListReservations from \"./pages/reservations/ListReservations\";\nimport Agenda from \"./pages/calendar/Agenda\";\n\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    component: Agenda,\n  },\n  {\n    path: \"/resa\",\n    exact: true,\n    component: Agenda,\n  },\n  {\n    path: \"/reservations\",\n    exact: true,\n    component: ListReservations,\n  },\n];\n\nexport default routes;\n","import React, { useContext } from \"react\";\nimport { Button, Icon, Row } from \"react-materialize\";\nimport moment from \"moment\";\nimport ThemeContext from \"../../../context/ThemeContext\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Controls = () => {\n  const { period, currentDate, setCurrentDate } = useContext(ThemeContext);\n  const newDate = moment({ ...currentDate });\n\n  const location = useLocation();\n\n  return location.pathname !== \"/reservations\" ? (\n    <Row className=\"center-align controls\" style={{ marginRight: \"25px\" }}>\n      <Button\n        className=\"teal darken-1\"\n        onClick={() => setCurrentDate(moment())}\n      >\n        <Icon className=\"today-icon\">insert_invitation</Icon>\n        <span className=\"today-text\">Aujourd'hui</span>\n      </Button>\n      <Button\n        className=\"teal darken-1\"\n        style={{ marginLeft: \"25px\", marginRight: \"5px\" }}\n        onClick={() => setCurrentDate(newDate.subtract(1, period))}\n      >\n        <Icon style={{ height: \"40px\", lineHeight: \"40px\" }}>chevron_left</Icon>\n      </Button>\n      <Button\n        className=\"teal darken-1\"\n        onClick={() => setCurrentDate(newDate.add(1, period))}\n      >\n        <Icon style={{ height: \"40px\", lineHeight: \"40px\" }}>\n          chevron_right\n        </Icon>\n      </Button>\n    </Row>\n  ) : null;\n};\n\nexport default Controls;\n","import React, { useContext } from \"react\";\nimport { Icon, Navbar, Switch } from \"react-materialize\";\nimport { Link } from \"react-router-dom\";\nimport ThemeContext from \"../../context/ThemeContext\";\nimport Controls from \"../pages/calendar/Controls\";\n// import logo from \"./../../img/logo3.png\";\n\nconst Menu = () => {\n  const { period, setPeriod } = useContext(ThemeContext);\n\n  return (\n    <div id=\"menu-navbar\">\n      <Navbar\n        alignLinks=\"right\"\n        brand={\n          <div className=\"brand-logo\">\n            <Controls />\n          </div>\n          // <Controls />\n        }\n        id=\"mobile-nav\"\n        menuIcon={<Icon>menu</Icon>}\n        style={{ backgroundColor: \"#26a69a\" }}\n        fixed\n      >\n        {/*<Controls />*/}\n        <Switch\n          id=\"switch-theme\"\n          offLabel=\"Année\"\n          onChange={() => {\n            setPeriod(period === \"month\" ? \"year\" : \"month\");\n          }}\n          onLabel=\"Mois\"\n          checked={period === \"month\"}\n        />\n        <Link to={\"/\"}>Calendrier</Link>\n        <Link to={\"/reservations\"}>Réservations</Link>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Menu;\n","import moment from \"moment\";\r\n\r\nmoment.locale(\"fr\", {\r\n  months: \"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\r\n    \"_\"\r\n  ),\r\n  monthsShort: \"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\r\n    \"_\"\r\n  ),\r\n  monthsParseExact: true,\r\n  weekdays: \"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),\r\n  weekdaysShort: \"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),\r\n  weekdaysMin: \"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: \"HH:mm\",\r\n    LTS: \"HH:mm:ss\",\r\n    L: \"DD/MM/YYYY\",\r\n    LL: \"D MMMM YYYY\",\r\n    LLL: \"D MMMM YYYY HH:mm\",\r\n    LLLL: \"dddd D MMMM YYYY HH:mm\",\r\n  },\r\n  calendar: {\r\n    sameDay: \"[Aujourd’hui à] LT\",\r\n    nextDay: \"[Demain à] LT\",\r\n    nextWeek: \"dddd [à] LT\",\r\n    lastDay: \"[Hier à] LT\",\r\n    lastWeek: \"dddd [dernier à] LT\",\r\n    sameElse: \"L\",\r\n  },\r\n  relativeTime: {\r\n    future: \"dans %s\",\r\n    past: \"il y a %s\",\r\n    s: \"quelques secondes\",\r\n    m: \"une minute\",\r\n    mm: \"%d minutes\",\r\n    h: \"une heure\",\r\n    hh: \"%d heures\",\r\n    d: \"un jour\",\r\n    dd: \"%d jours\",\r\n    M: \"un mois\",\r\n    MM: \"%d mois\",\r\n    y: \"un an\",\r\n    yy: \"%d ans\",\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\r\n  ordinal: function (number) {\r\n    return number + (number === 1 ? \"er\" : \"e\");\r\n  },\r\n  meridiemParse: /PD|MD/,\r\n  isPM: function (input) {\r\n    return input.charAt(0) === \"M\";\r\n  },\r\n  // In case the meridiem units are not separated around 12, then implement\r\n  // this function (look at locale/id.js for an example).\r\n  // meridiemHour : function (hour, meridiem) {\r\n  //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\r\n  // },\r\n  meridiem: function (hours, minutes, isLower) {\r\n    return hours < 12 ? \"PD\" : \"MD\";\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4, // Used to determine first week of the year.\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\nimport ThemeContext from \"../ThemeContext\";\nimport moment from \"moment\";\n\nconst ThemeContextProvider = ({ children }) => {\n  const [period, setPeriod] = useState(\"year\");\n  const [currentDate, setCurrentDate] = useState(moment().date(1));\n  const value = { period, setPeriod, currentDate, setCurrentDate };\n\n  moment.locale(\"fr\");\n\n  return (\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { useEffect, useState } from \"react\";\nimport DateContext from \"../DateContext\";\nimport { useEasybase } from \"easybase-react\";\n\nconst DateContextProvider = ({ children }) => {\n  const [beginDate, setBeginDate] = useState({});\n  const [endDate, setEndDate] = useState({});\n  const [isLoadingEvents, setIsLoadingEvents] = useState(true);\n  const [sync, setSync] = useState(false);\n  const [events, setEvents] = useState([]);\n  const value = {\n    beginDate,\n    setBeginDate,\n    endDate,\n    setEndDate,\n    isLoadingEvents,\n    events,\n  };\n\n  const { Query, useFrameEffect } = useEasybase();\n\n  useFrameEffect(() => {\n    setSync(!sync);\n  });\n\n  useEffect(() => {\n    (async () => {\n      setIsLoadingEvents(true);\n      const res = await Query({\n        queryName: \"confirmed\",\n        tableName: \"RESERVATION\",\n      });\n      setEvents(res);\n      setIsLoadingEvents(false);\n    })();\n  }, [sync]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <DateContext.Provider value={value}>{children}</DateContext.Provider>;\n};\n\nexport default DateContextProvider;\n","import \"../App.scss\";\r\nimport { EasybaseProvider } from \"easybase-react\";\r\nimport ebconfig from \"../ebconfig\";\r\nimport routes from \"./allRoutes\";\r\nimport { Container } from \"react-materialize\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport M from \"materialize-css\";\r\nimport Menu from \"./menu/Menu\";\r\nimport \"./pages/utils/momentLocaleFr\";\r\nimport ThemeContextProvider from \"../context/provider/ThemeContextProvider\";\r\nimport DateContextProvider from \"../context/provider/DateContextProvider\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <ThemeContextProvider>\r\n      <EasybaseProvider ebconfig={ebconfig}>\r\n        <DateContextProvider>\r\n          <div className=\"hide\">{M.version}</div>\r\n          <Menu />\r\n          <Container id=\"mainContainer\" style={{ padding: \"15px\" }}>\r\n            <Switch>\r\n              {routes.map((route, index) => (\r\n                <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  children={<route.component />}\r\n                />\r\n              ))}\r\n            </Switch>\r\n          </Container>\r\n        </DateContextProvider>\r\n      </EasybaseProvider>\r\n    </ThemeContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"./App.scss\";\r\nimport \"react-materialize\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Main from \"./Main\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
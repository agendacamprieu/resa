{"version":3,"sources":["reportWebVitals.js","ebconfig.js","components/pages/reservations/Reservation.js","components/pages/utils/DataLoader.js","components/pages/utils/DatePickerFr.js","context/DateContext.js","components/AddButton.js","components/pages/reservations/ListReservations.js","context/ThemeContext.js","components/pages/utils/range.js","components/pages/calendar/year/YearMonthDay.js","components/pages/calendar/year/YearSmallDays.js","components/pages/calendar/year/YearMonth.js","components/pages/calendar/year/Year.js","components/pages/calendar/month/Month.js","components/pages/calendar/Controls.js","components/pages/calendar/Calendar.js","components/allRoutes.js","components/pages/calendar/Agenda.js","components/menu/Menu.js","components/pages/utils/momentLocaleFr.js","context/provider/ThemeContextProvider.js","context/provider/DateContextProvider.js","components/App.js","Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ebconfig","Reservation","reservation","index","actions","to","className","closeIcon","revealIcon","textClassName","title","username","isconfirmed","moment","datebegin","format","dateend","DataLoader","active","color","flashing","DatePickerFr","onSelect","id","options","autoClose","container","defaultDate","disableDayFn","disableWeekends","events","firstDay","i18n","cancel","clear","done","months","monthsShort","nextMonth","previousMonth","weekdays","weekdaysAbbrev","weekdaysShort","isRTL","maxDate","minDate","onClose","onDraw","onOpen","parse","setDefaultDate","showClearBtn","showDaysInNextAndPreviousMonths","showMonthAfterYear","yearRange","DateContext","React","createContext","beginDate","endDate","isLoadingEvents","AddButton","useState","isLoading","setIsloading","useContext","setBeginDate","setEndDate","useEasybase","Frame","sync","nameRef","createRef","addResa","a","newName","current","value","verifyDates","push","result","find","resa","isBetween","M","toast","html","isAfter","header","trigger","floating","fab","direction","icon","large","node","waves","flat","modal","label","ref","error","success","validate","date","onClick","style","position","bottom","right","ListReservations","configureFrame","useEffect","tableName","limit","map","m","s","ThemeContext","period","currentDate","setTheme","range","size","startAt","Array","keys","i","YearMonthDay","month","day","year","parseInt","subtract","getClassNameToday","isSame","tooltip","YearSmallDays","smallDays","firstDayOfMonth","weekday","slice","length","concat","YearMonth","days","daysInMonth","Year","Month","isInMonth","number","isToday","daysOfMonth","countPreviousMonth","daysOfPreviousMonthFinal","daysOfMonthBefore","daysOfMonthFinal","forEach","key","getDaysOfMonth","data-field","week","Controls","setCurrentDate","newDate","marginTop","marginLeft","marginRight","add","Calendar","routes","path","exact","component","Menu","setPeriod","alignLinks","brand","medium","menuIcon","backgroundColor","offLabel","onChange","onLabel","checked","locale","split","monthsParseExact","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","mm","h","hh","d","dd","MM","y","yy","dayOfMonthOrdinalParse","ordinal","meridiemParse","isPM","input","charAt","meridiem","hours","minutes","isLower","dow","doy","ThemeContextProvider","children","Provider","DateContextProvider","setIsLoadingEvents","setEvents","Query","queryName","res","App","version","padding","route","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6f9ebf0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable */\r\n// WARNING: Do not edit this file\r\n\r\nconst ebconfig = {\r\n  \"integration\": \"react-1-ZEWiLzgRlUVBOSIka2ff-oM1JKZb7Wz11IqDlU4ejcDW5n-dyB9nvi-2UZhKGlX62e5O25MzT4jf6nvYtMjwcw4Z52ddt0ZLVlmbR4IJVS-tyn1ah2ARqiIv\",\r\n  \"tt\": \"tt-1-MEoT3ua1cNGjjdS6VPJz9M3H5MAwSnWqkY2dsyxNn58=\",\r\n  \"version\": \"2020-11-20\"\r\n}\r\n\r\nexport default ebconfig;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Badge, Card, Icon } from \"react-materialize\";\r\nimport moment from \"moment\";\r\n\r\nconst Reservation = ({ reservation, index }) => {\r\n  return (\r\n    <Card\r\n      actions={[\r\n        <Link key=\"1\" to={\"/\"}>\r\n          Voir\r\n        </Link>,\r\n      ]}\r\n      className=\"blue-grey darken-1 reservation-card\"\r\n      closeIcon={<Icon>close</Icon>}\r\n      revealIcon={<Icon>more_vert</Icon>}\r\n      textClassName=\"white-text\"\r\n      title={reservation.username}\r\n    >\r\n      <Badge\r\n        className={\r\n          reservation.isconfirmed ? \"green white-text\" : \"lime white-text\"\r\n        }\r\n      >\r\n        {reservation.isconfirmed ? (\r\n          <>\r\n            <Icon>check</Icon>\r\n            <span className=\"status\">Vérifié</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Icon>access_time</Icon>\r\n            <span className=\"status\">En attente</span>\r\n          </>\r\n        )}\r\n      </Badge>\r\n      <p>\r\n        {moment(reservation.datebegin).format(\"DD MMMM YYYY\")} ->{\" \"}\r\n        {moment(reservation.dateend).format(\"DD MMMM YYYY\")}\r\n      </p>\r\n      {/*<ShowDate*/}\r\n      {/*  date={moment(reservation.datebegin).format(\"DD MMMM YYYY\")}*/}\r\n      {/*/>*/}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Reservation;\r\n","import React from \"react\";\r\nimport { Preloader, Row } from \"react-materialize\";\r\n\r\nconst DataLoader = () => {\r\n  return (\r\n    <Row className=\"loader-wrapper center-align\">\r\n      <Preloader active color=\"blue\" flashing />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DataLoader;\r\n","import React from \"react\";\nimport { DatePicker } from \"react-materialize\";\n\nconst DatePickerFr = ({ title, onSelect }) => {\n  return (\n    <DatePicker\n      id={title}\n      options={{\n        autoClose: true,\n        container: \"body\",\n        defaultDate: null,\n        disableDayFn: null,\n        disableWeekends: false,\n        events: [],\n        firstDay: 0,\n        format: \"dddd d mmmm, yyyy\",\n        i18n: {\n          cancel: \"Annuler\",\n          clear: \"Effacer\",\n          done: \"Ok\",\n          months: [\n            \"Janvier\",\n            \"Février\",\n            \"Mars\",\n            \"Avril\",\n            \"Mai\",\n            \"Juin\",\n            \"Juillet\",\n            \"Août\",\n            \"Septembre\",\n            \"Octobre\",\n            \"Novembre\",\n            \"Décembre\",\n          ],\n          monthsShort: [\n            \"Jan\",\n            \"Fev\",\n            \"Mar\",\n            \"Avr\",\n            \"Mai\",\n            \"Jun\",\n            \"Jul\",\n            \"Aut\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n          ],\n          nextMonth: \"›\",\n          previousMonth: \"‹\",\n          weekdays: [\n            \"Dimanche\",\n            \"Lundi\",\n            \"Mardi\",\n            \"Mercredi\",\n            \"Jeudi\",\n            \"Vendredi\",\n            \"Samedi\",\n          ],\n          weekdaysAbbrev: [\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"],\n          weekdaysShort: [\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"],\n        },\n        isRTL: false,\n        maxDate: null,\n        minDate: null,\n        onClose: null,\n        onDraw: null,\n        onOpen: null,\n        onSelect: onSelect,\n        parse: null,\n        setDefaultDate: false,\n        showClearBtn: false,\n        showDaysInNextAndPreviousMonths: false,\n        showMonthAfterYear: false,\n        yearRange: 10,\n      }}\n    >\n      {title}\n    </DatePicker>\n  );\n};\n\nexport default DatePickerFr;\n","import React from \"react\";\n\nconst DateContext = React.createContext({\n  beginDate: null,\n  endDate: null,\n  isLoadingEvents: false,\n  events: [],\n});\n\nexport default DateContext;\n","import React, { useContext, useState } from \"react\";\nimport { Button, Icon, Modal, TextInput } from \"react-materialize\";\nimport DatePickerFr from \"./pages/utils/DatePickerFr\";\nimport moment from \"moment\";\nimport DataLoader from \"./pages/utils/DataLoader\";\nimport { useEasybase } from \"easybase-react\";\nimport M from \"materialize-css\";\nimport DateContext from \"../context/DateContext\";\n\nconst AddButton = () => {\n  const [isLoading, setIsloading] = useState(false);\n  const { beginDate, setBeginDate, endDate, setEndDate } = useContext(\n    DateContext\n  );\n  const { Frame, sync } = useEasybase();\n  const nameRef = React.createRef();\n\n  const addResa = async () => {\n    const newName = nameRef.current && nameRef.current.value;\n    if (!newName) {\n      nameRef.current.className = \"validate invalid\";\n    } else if (verifyDates()) {\n      setIsloading(true);\n      Frame().push({\n        username: newName,\n        isconfirmed: false,\n        datebegin: beginDate.format(\"YYYY-MM-DD\"),\n        dateend: endDate.format(\"YYYY-MM-DD\"),\n      });\n\n      await sync();\n      setIsloading(false);\n    }\n  };\n\n  const verifyDates = () => {\n    let result = false;\n    if (beginDate && endDate) {\n      const isReserved = Frame().find(\n        (resa) =>\n          beginDate.isBetween(moment(resa.datebegin), moment(resa.dateend)) ||\n          endDate.isBetween(moment(resa.datebegin), moment(resa.dateend))\n      );\n      if (!isReserved) {\n        if (beginDate.isAfter(moment())) {\n          if (!beginDate.isAfter(endDate)) {\n            result = true;\n          } else {\n            M.toast({\n              html: \"La date de fin de peut pas être avant la date de début.\",\n            });\n          }\n        } else {\n          M.toast({\n            html: \"La date de début ne peut pas être avant aujourd'hui.\",\n          });\n        }\n      } else {\n        M.toast({\n          html: \"Déjà réservé.\",\n        });\n      }\n    } else {\n      !beginDate &&\n        M.toast({\n          html: \"Hop hop hop, et la date de début là !\",\n        });\n      !endDate &&\n        M.toast({\n          html: \"Hop hop hop, et la date de fin là !\",\n        });\n    }\n    return result;\n  };\n\n  return isLoading ? (\n    <DataLoader />\n  ) : (\n    <Modal\n      id=\"addModal\"\n      header=\"Choix des dates\"\n      trigger={\n        <Button\n          floating\n          fab={{\n            direction: \"left\",\n          }}\n          icon={<Icon>add</Icon>}\n          large\n          node=\"button\"\n          waves=\"light\"\n        />\n      }\n      actions={[\n        <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n          Fermer\n        </Button>,\n      ]}\n    >\n      <TextInput\n        label=\"Prénom\"\n        ref={nameRef}\n        error=\"Oulala tu vas avoir des problèmes !\"\n        success=\"Good to go !\"\n        validate\n      />\n      <DatePickerFr\n        title={\"Date de début\"}\n        onSelect={(date) => setBeginDate(moment(date))}\n      />\n      <DatePickerFr\n        title={\"Date de fin\"}\n        onSelect={(date) => setEndDate(moment(date))}\n      />\n      <Button\n        onClick={addResa}\n        style={{ position: \"absolute\", bottom: \"15px\" }}\n      >\n        Valider\n        <Icon right>send</Icon>\n      </Button>\n    </Modal>\n  );\n};\n\nexport default AddButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useEasybase } from \"easybase-react\";\nimport { Col, Row } from \"react-materialize\";\nimport Reservation from \"./Reservation\";\nimport DataLoader from \"../utils/DataLoader\";\nimport AddButton from \"../../AddButton\";\n\nconst ListReservations = () => {\n  const [isLoading, setIsloading] = useState(true);\n  const { Frame, sync, configureFrame } = useEasybase();\n\n  useEffect(() => {\n    (async () => {\n      setIsloading(true);\n      await configureFrame({ tableName: \"RESERVATION\", limit: 10 });\n      await sync();\n      setIsloading(false);\n    })();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return isLoading ? (\n    <DataLoader />\n  ) : (\n    <>\n      <Row>\n        {Frame().map((resa, index) => (\n          <Col m={6} s={12} key={index}>\n            <Reservation reservation={resa} index={index} />\n          </Col>\n        ))}\n      </Row>\n      <AddButton />\n    </>\n  );\n};\n\nexport default ListReservations;\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ThemeContext = React.createContext({\r\n  period: \"month\",\r\n  currentDate: moment().date(1),\r\n  setTheme: () => {},\r\n});\r\n\r\nexport default ThemeContext;\r\n","const range = (size, startAt = 0) => {\r\n  return size > 0 ? [...Array(size).keys()].map((i) => i + startAt) : [];\r\n};\r\n\r\nexport default range;\r\n","import React, { useContext } from \"react\";\nimport ThemeContext from \"../../../../context/ThemeContext\";\nimport moment from \"moment\";\nimport DateContext from \"../../../../context/DateContext\";\nimport { Button } from \"react-materialize\";\n\nconst YearMonthDay = ({ month, day }) => {\n  const { currentDate } = useContext(ThemeContext);\n  const { events } = useContext(DateContext);\n\n  const isToday = () => {\n    return moment({\n      year: currentDate.year(),\n      month: parseInt(moment().month(month).format(\"MM\")) - 1,\n      day: day,\n    }).isSame(moment(), \"day\");\n  };\n\n  const isReserved = () => {\n    const result = events.find((resa) =>\n      moment({\n        year: currentDate.year(),\n        month: parseInt(moment().month(month).format(\"MM\")) - 1,\n        day: day,\n      }).isBetween(\n        moment(resa.datebegin).subtract(\"1\", \"day\"),\n        moment(resa.dateend)\n      )\n    );\n    return result;\n  };\n\n  const resa = isReserved();\n\n  const getClassNameToday = () => {\n    if (isToday()) {\n      if (day >= 10) {\n        return \"day-today double-number\";\n      } else {\n        return \"day-today\";\n      }\n    } else if (resa) {\n      if (day >= 10) {\n        return \"day-reserved double-number\";\n      } else {\n        return \"day-reserved\";\n      }\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <div className=\"day\">\n      {resa ? (\n        <Button className={getClassNameToday()} tooltip={resa.username}>\n          {day}\n        </Button>\n      ) : (\n        <div className={getClassNameToday()}>{day}</div>\n      )}\n    </div>\n  );\n};\n\nexport default YearMonthDay;\n","import React, { useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\n\r\nconst YearSmallDays = ({ month }) => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n\r\n  let smallDays = [\"l\", \"m\", \"m\", \"j\", \"v\", \"s\", \"d\"];\r\n\r\n  const getFirstDayOfMonth = () => {\r\n    return moment({ ...currentDate })\r\n      .month(month)\r\n      .weekday() === 0\r\n      ? 7\r\n      : moment({ ...currentDate })\r\n          .month(month)\r\n          .weekday();\r\n  };\r\n\r\n  const firstDayOfMonth = getFirstDayOfMonth();\r\n  smallDays = smallDays\r\n    .slice(firstDayOfMonth - 1, smallDays.length)\r\n    .concat(smallDays.slice(0, firstDayOfMonth - 1));\r\n\r\n  return (\r\n    <div className=\"header-small-days\">\r\n      {smallDays.map((day, index) => (\r\n        <div key={index} className=\"year-day\">\r\n          {day}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearSmallDays;\r\n","import React, { useContext } from \"react\";\nimport { Col } from \"react-materialize\";\nimport ThemeContext from \"../../../../context/ThemeContext\";\nimport range from \"../../utils/range\";\nimport YearMonthDay from \"./YearMonthDay\";\nimport moment from \"moment\";\nimport YearSmallDays from \"./YearSmallDays\";\n\nconst YearMonth = ({ month }) => {\n  const { currentDate } = useContext(ThemeContext);\n  const days = range(\n    moment({ ...currentDate })\n      .month(month)\n      .daysInMonth(),\n    1\n  );\n\n  return (\n    <Col className=\"month\" s={12} m={3}>\n      <h4\n        className={\n          moment().format(\"MMMM\") === month &&\n          currentDate.year() === moment().year()\n            ? \"capitalize teal-text\"\n            : \"capitalize\"\n        }\n      >\n        {month}\n      </h4>\n      <YearSmallDays month={month} />\n      <div className=\"month-days\">\n        {days.map((day, index) => (\n          <YearMonthDay month={month} day={day} key={index} />\n        ))}\n      </div>\n    </Col>\n  );\n};\n\nexport default YearMonth;\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport YearMonth from \"./YearMonth\";\nimport { Row } from \"react-materialize\";\nimport ThemeContext from \"../../../../context/ThemeContext\";\n\nconst Year = () => {\n  const { currentDate } = useContext(ThemeContext);\n\n  return (\n    <div className=\"year-calendar\">\n      <h4 className=\"teal-text\">\n        <strong>{currentDate.year()}</strong>\n      </h4>\n      <Row>\n        {moment.months().map((month, index) => (\n          <YearMonth month={month} key={index} />\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Year;\n","import React, { useContext } from \"react\";\n// import MonthDay from \"./MonthDay\";\nimport range from \"../../utils/range\";\nimport { Table } from \"react-materialize\";\nimport ThemeContext from \"../../../../context/ThemeContext\";\nimport moment from \"moment\";\n\nconst Month = () => {\n  const { currentDate } = useContext(ThemeContext);\n\n  const month = currentDate.format(\"MMMM\");\n  const year = currentDate.year();\n  const weekdays = moment.weekdays(true);\n  const weekdaysShort = moment.weekdaysShort(true);\n\n  const getFirstDayOfMonth = () => {\n    return moment({ ...currentDate })\n      .month(month)\n      .weekday() === 0\n      ? 7\n      : moment({ ...currentDate })\n          .month(month)\n          .weekday();\n  };\n\n  const getDaysOfMonth = () => {\n    let days = [];\n    const indexes = [7, 14, 21, 28, 35, 42];\n    const daysOfMonth = range(currentDate.daysInMonth(), 1);\n    const countPreviousMonth = moment({ ...currentDate })\n      .month(month)\n      .subtract(1, \"month\")\n      .daysInMonth();\n    const firstDayOfMonth = getFirstDayOfMonth();\n    const daysOfPreviousMonth = range(\n      firstDayOfMonth - 1,\n      countPreviousMonth + 2 - firstDayOfMonth\n    );\n    const daysOfPreviousMonthFinal = daysOfPreviousMonth.map((day) => ({\n      isInMonth: false,\n      number: day,\n    }));\n    const daysOfMonthBefore = daysOfMonth.map((day) => ({\n      isInMonth: true,\n      number: day,\n    }));\n    const daysOfMonthFinal = daysOfPreviousMonthFinal.concat(daysOfMonthBefore);\n\n    indexes.forEach((index, key) => {\n      days[key] = daysOfMonthFinal.slice(index - 7, index);\n    });\n\n    return days;\n  };\n\n  const isToday = (day) => {\n    return moment({\n      year: currentDate.year(),\n      month: parseInt(currentDate.format(\"MM\")) - 1,\n      day: day.number,\n    }).isSame(moment(), \"day\");\n  };\n\n  const getClassNameToday = (day) => {\n    let className = \"\";\n    className += day.isInMonth ? \"in-month\" : \"out-of-month\";\n    if (isToday(day)) {\n      className += \" day-today\";\n      if (day.number >= 10) {\n        className += \" double-number\";\n      }\n    }\n    return className;\n  };\n\n  const days = getDaysOfMonth();\n\n  return (\n    <div className=\"month-calendar\">\n      <h4 className=\"capitalize\">\n        <span\n          className={\n            month === moment().format(\"MMMM\") &&\n            currentDate.year() === moment().year()\n              ? \"amber-text\"\n              : \"teal-text\"\n          }\n        >\n          <strong>{month}</strong>\n        </span>{\" \"}\n        {year}\n      </h4>\n      <Table className=\"centered hide-on-small-only\">\n        <thead>\n          <tr>\n            {weekdays.map((day, index) => (\n              <th data-field=\"day\" key={index} className=\"capitalize\">\n                {day}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {days.map((week, key) => (\n            <tr key={key}>\n              {week.map((day, index) => (\n                <td className={getClassNameToday(day)} key={index}>\n                  {day.number}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <Table className=\"centered hide-on-med-and-up\">\n        <thead>\n          <tr>\n            {weekdaysShort.map((day, index) => (\n              <th data-field=\"day\" key={index} className=\"capitalize\">\n                {day}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {days.map((week, key) => (\n            <tr key={key}>\n              {week.map((day, index) => (\n                <td className={getClassNameToday(day)} key={index}>\n                  {day.number}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Month;\n","import React, { useContext } from \"react\";\r\nimport { Button, Icon, Row } from \"react-materialize\";\r\nimport moment from \"moment\";\r\nimport ThemeContext from \"../../../context/ThemeContext\";\r\n\r\nconst Controls = () => {\r\n  const { period, currentDate, setCurrentDate } = useContext(ThemeContext);\r\n\r\n  const newDate = moment({ ...currentDate });\r\n  return (\r\n    <Row className=\"center-align\" style={{ marginTop: \"30px\" }}>\r\n      <Button\r\n        className=\"teal darken-1\"\r\n        onClick={() => setCurrentDate(moment())}\r\n      >\r\n        Aujourd'hui\r\n      </Button>\r\n      <Button\r\n        className=\"teal darken-1\"\r\n        style={{ marginLeft: \"25px\", marginRight: \"5px\" }}\r\n        onClick={() => setCurrentDate(newDate.subtract(1, period))}\r\n      >\r\n        <Icon>chevron_left</Icon>\r\n      </Button>\r\n      <Button\r\n        className=\"teal darken-1\"\r\n        onClick={() => setCurrentDate(newDate.add(1, period))}\r\n      >\r\n        <Icon>chevron_right</Icon>\r\n      </Button>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React, { useContext } from \"react\";\nimport ThemeContext from \"../../../context/ThemeContext\";\nimport Year from \"./year/Year\";\nimport Month from \"./month/Month\";\nimport Controls from \"./Controls\";\nimport AddButton from \"../../AddButton\";\n\nconst Calendar = () => {\n  const { period } = useContext(ThemeContext);\n\n  return (\n    <>\n      {period === \"year\" && <Controls />}\n      <div className={period !== \"year\" ? \"hide\" : \"\"}>\n        <Year />\n      </div>\n      <div className={period !== \"month\" ? \"hide\" : \"\"}>\n        <Month />\n      </div>\n      <Controls />\n      <AddButton />\n    </>\n  );\n};\n\nexport default Calendar;\n","import ListReservations from \"./pages/reservations/ListReservations\";\r\nimport Agenda from \"./pages/calendar/Agenda\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    component: Agenda,\r\n  },\r\n  {\r\n    path: \"/reservations\",\r\n    exact: true,\r\n    component: ListReservations,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React, { useContext } from \"react\";\nimport Calendar from \"./Calendar\";\nimport DataLoader from \"../utils/DataLoader\";\nimport DateContext from \"../../../context/DateContext\";\n\nconst Agenda = () => {\n  const { isLoadingEvents } = useContext(DateContext);\n\n  return isLoadingEvents ? <DataLoader /> : <Calendar />;\n};\n\nexport default Agenda;\n","import React, { useContext } from \"react\";\r\nimport { Icon, Navbar, Switch } from \"react-materialize\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ThemeContext from \"../../context/ThemeContext\";\r\n// import logo from \"./../../img/logo3.png\";\r\n\r\nconst Menu = () => {\r\n  const { period, setPeriod } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div id=\"menu-navbar\">\r\n      <Navbar\r\n        alignLinks=\"right\"\r\n        brand={\r\n          <div className=\"brand-logo\">\r\n            <Icon medium className=\"teal-text text-darken-3\">\r\n              house\r\n            </Icon>\r\n            <span>Camprieu</span>\r\n            {/*<img src={logo} alt=\"logo\"></img>*/}\r\n          </div>\r\n        }\r\n        id=\"mobile-nav\"\r\n        menuIcon={<Icon>menu</Icon>}\r\n        style={{ backgroundColor: \"#26a69a\" }}\r\n      >\r\n        <Switch\r\n          id=\"switch-theme\"\r\n          offLabel=\"Année\"\r\n          onChange={() => {\r\n            setPeriod(period === \"month\" ? \"year\" : \"month\");\r\n          }}\r\n          onLabel=\"Mois\"\r\n          checked={period === \"month\"}\r\n        />\r\n        <Link to={\"/\"}>Calendrier</Link>\r\n        <Link to={\"/reservations\"}>Réservations</Link>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import moment from \"moment\";\r\n\r\nmoment.locale(\"fr\", {\r\n  months: \"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\r\n    \"_\"\r\n  ),\r\n  monthsShort: \"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\r\n    \"_\"\r\n  ),\r\n  monthsParseExact: true,\r\n  weekdays: \"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),\r\n  weekdaysShort: \"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),\r\n  weekdaysMin: \"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: \"HH:mm\",\r\n    LTS: \"HH:mm:ss\",\r\n    L: \"DD/MM/YYYY\",\r\n    LL: \"D MMMM YYYY\",\r\n    LLL: \"D MMMM YYYY HH:mm\",\r\n    LLLL: \"dddd D MMMM YYYY HH:mm\",\r\n  },\r\n  calendar: {\r\n    sameDay: \"[Aujourd’hui à] LT\",\r\n    nextDay: \"[Demain à] LT\",\r\n    nextWeek: \"dddd [à] LT\",\r\n    lastDay: \"[Hier à] LT\",\r\n    lastWeek: \"dddd [dernier à] LT\",\r\n    sameElse: \"L\",\r\n  },\r\n  relativeTime: {\r\n    future: \"dans %s\",\r\n    past: \"il y a %s\",\r\n    s: \"quelques secondes\",\r\n    m: \"une minute\",\r\n    mm: \"%d minutes\",\r\n    h: \"une heure\",\r\n    hh: \"%d heures\",\r\n    d: \"un jour\",\r\n    dd: \"%d jours\",\r\n    M: \"un mois\",\r\n    MM: \"%d mois\",\r\n    y: \"un an\",\r\n    yy: \"%d ans\",\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\r\n  ordinal: function (number) {\r\n    return number + (number === 1 ? \"er\" : \"e\");\r\n  },\r\n  meridiemParse: /PD|MD/,\r\n  isPM: function (input) {\r\n    return input.charAt(0) === \"M\";\r\n  },\r\n  // In case the meridiem units are not separated around 12, then implement\r\n  // this function (look at locale/id.js for an example).\r\n  // meridiemHour : function (hour, meridiem) {\r\n  //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\r\n  // },\r\n  meridiem: function (hours, minutes, isLower) {\r\n    return hours < 12 ? \"PD\" : \"MD\";\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4, // Used to determine first week of the year.\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport ThemeContext from \"../ThemeContext\";\r\nimport moment from \"moment\";\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [period, setPeriod] = useState(\"month\");\r\n  const [currentDate, setCurrentDate] = useState(moment().date(1));\r\n  const value = { period, setPeriod, currentDate, setCurrentDate };\r\n\r\n  moment.locale(\"fr\");\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { useEffect, useState } from \"react\";\nimport DateContext from \"../DateContext\";\nimport { useEasybase } from \"easybase-react\";\n\nconst DateContextProvider = ({ children }) => {\n  const [beginDate, setBeginDate] = useState({});\n  const [endDate, setEndDate] = useState({});\n  const [isLoadingEvents, setIsLoadingEvents] = useState(true);\n  const [events, setEvents] = useState([]);\n  const value = {\n    beginDate,\n    setBeginDate,\n    endDate,\n    setEndDate,\n    isLoadingEvents,\n    events,\n  };\n\n  const { Query } = useEasybase();\n\n  useEffect(() => {\n    (async () => {\n      setIsLoadingEvents(true);\n      const res = await Query({\n        queryName: \"confirmed\",\n        tableName: \"RESERVATION\",\n      });\n      setEvents(res);\n      setIsLoadingEvents(false);\n    })();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <DateContext.Provider value={value}>{children}</DateContext.Provider>;\n};\n\nexport default DateContextProvider;\n","import \"../App.scss\";\nimport { EasybaseProvider } from \"easybase-react\";\nimport ebconfig from \"../ebconfig\";\nimport routes from \"./allRoutes\";\nimport { Container } from \"react-materialize\";\nimport { Route, Switch } from \"react-router-dom\";\nimport React from \"react\";\nimport M from \"materialize-css\";\nimport Menu from \"./menu/Menu\";\nimport \"./pages/utils/momentLocaleFr\";\nimport ThemeContextProvider from \"../context/provider/ThemeContextProvider\";\nimport DateContextProvider from \"../context/provider/DateContextProvider\";\n\nconst App = () => {\n  return (\n    <ThemeContextProvider>\n      <EasybaseProvider ebconfig={ebconfig}>\n        <DateContextProvider>\n          <div className=\"hide\">{M.version}</div>\n          <Menu />\n          <Container id=\"mainContainer\" style={{ padding: \"15px\" }}>\n            <Switch>\n              {routes.map((route, index) => (\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  children={<route.component />}\n                />\n              ))}\n            </Switch>\n          </Container>\n        </DateContextProvider>\n      </EasybaseProvider>\n    </ThemeContextProvider>\n  );\n};\n\nexport default App;\n","import \"./App.scss\";\r\nimport \"react-materialize\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Main from \"./Main\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
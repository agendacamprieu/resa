{"version":3,"sources":["reportWebVitals.js","ebconfig.js","components/pages/reservations/Reservation.js","components/pages/utils/DataLoader.js","components/pages/reservations/ListReservations.js","context/ThemeContext.js","components/pages/utils/range.js","components/pages/calendar/year/YearMonthDay.js","components/pages/calendar/year/YearSmallDays.js","components/pages/calendar/year/YearMonth.js","components/pages/calendar/year/Year.js","components/pages/calendar/month/Month.js","components/pages/calendar/Controls.js","components/pages/calendar/Calendar.js","components/allRoutes.js","components/pages/calendar/Agenda.js","components/menu/Menu.js","components/pages/utils/momentLocaleFr.js","context/provider/ThemeContextProvider.js","components/App.js","Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ebconfig","Reservation","reservation","index","actions","to","className","closeIcon","revealIcon","textClassName","title","username","isconfirmed","moment","datebegin","format","dateend","DataLoader","active","color","flashing","ListReservations","useState","isLoading","setIsloading","useEasybase","Frame","sync","configureFrame","useEffect","a","tableName","limit","map","resa","m","s","ThemeContext","React","createContext","period","currentDate","date","setTheme","range","size","startAt","Array","keys","i","YearMonthDay","month","day","useContext","year","parseInt","isSame","YearSmallDays","smallDays","firstDayOfMonth","weekday","slice","length","concat","YearMonth","days","daysInMonth","Year","months","Month","weekdays","weekdaysShort","getClassNameToday","isInMonth","number","isToday","daysOfMonth","countPreviousMonth","subtract","daysOfPreviousMonthFinal","daysOfMonthBefore","daysOfMonthFinal","forEach","key","getDaysOfMonth","data-field","week","Controls","setCurrentDate","newDate","style","marginTop","onClick","marginLeft","marginRight","add","Calendar","events","routes","path","exact","component","setEvents","Query","queryName","res","Menu","setPeriod","id","alignLinks","brand","medium","menuIcon","backgroundColor","offLabel","onChange","onLabel","checked","locale","split","monthsShort","monthsParseExact","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","meridiemParse","isPM","input","charAt","meridiem","hours","minutes","isLower","dow","doy","ThemeContextProvider","children","value","Provider","App","version","padding","route","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfd1f824.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable */\r\n// WARNING: Do not edit this file\r\n\r\nconst ebconfig = {\r\n  \"integration\": \"react-1-ZEWiLzgRlUVBOSIka2ff-oM1JKZb7Wz11IqDlU4ejcDW5n-dyB9nvi-2UZhKGlX62e5O25MzT4jf6nvYtMjwcw4Z52ddt0ZLVlmbR4IJVS-tyn1ah2ARqiIv\",\r\n  \"tt\": \"tt-1-MEoT3ua1cNGjjdS6VPJz9M3H5MAwSnWqkY2dsyxNn58=\",\r\n  \"version\": \"2020-11-20\"\r\n}\r\n\r\nexport default ebconfig;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Badge, Card, Icon } from \"react-materialize\";\r\nimport moment from \"moment\";\r\n\r\nconst Reservation = ({ reservation, index }) => {\r\n  return (\r\n    <Card\r\n      actions={[\r\n        <Link key=\"1\" to={\"/\"}>\r\n          Voir\r\n        </Link>,\r\n      ]}\r\n      className=\"blue-grey darken-1 reservation-card\"\r\n      closeIcon={<Icon>close</Icon>}\r\n      revealIcon={<Icon>more_vert</Icon>}\r\n      textClassName=\"white-text\"\r\n      title={reservation.username}\r\n    >\r\n      <Badge\r\n        className={\r\n          reservation.isconfirmed ? \"green white-text\" : \"lime white-text\"\r\n        }\r\n      >\r\n        {reservation.isconfirmed ? (\r\n          <>\r\n            <Icon>check</Icon>\r\n            <span className=\"status\">Vérifié</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Icon>access_time</Icon>\r\n            <span className=\"status\">En attente</span>\r\n          </>\r\n        )}\r\n      </Badge>\r\n      <p>\r\n        {moment(reservation.datebegin).format(\"DD MMMM YYYY\")} ->{\" \"}\r\n        {moment(reservation.dateend).format(\"DD MMMM YYYY\")}\r\n      </p>\r\n      {/*<ShowDate*/}\r\n      {/*  date={moment(reservation.datebegin).format(\"DD MMMM YYYY\")}*/}\r\n      {/*/>*/}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Reservation;\r\n","import React from \"react\";\r\nimport { Preloader, Row } from \"react-materialize\";\r\n\r\nconst DataLoader = () => {\r\n  return (\r\n    <Row className=\"loader-wrapper center-align\">\r\n      <Preloader active color=\"blue\" flashing />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DataLoader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useEasybase } from \"easybase-react\";\r\nimport { Col, Row } from \"react-materialize\";\r\nimport Reservation from \"./Reservation\";\r\nimport DataLoader from \"../utils/DataLoader\";\r\n\r\nconst ListReservations = () => {\r\n  const [isLoading, setIsloading] = useState(true);\r\n  const { Frame, sync, configureFrame } = useEasybase();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsloading(true);\r\n      await configureFrame({ tableName: \"RESERVATION\", limit: 10 });\r\n      await sync();\r\n      setIsloading(false);\r\n    })();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return isLoading ? (\r\n    <DataLoader />\r\n  ) : (\r\n    <Row>\r\n      {Frame().map((resa, index) => (\r\n        <Col m={6} s={12} key={index}>\r\n          <Reservation reservation={resa} index={index} />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ListReservations;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ThemeContext = React.createContext({\r\n  period: \"month\",\r\n  currentDate: moment().date(1),\r\n  setTheme: () => {},\r\n});\r\n\r\nexport default ThemeContext;\r\n","const range = (size, startAt = 0) => {\r\n  return size > 0 ? [...Array(size).keys()].map((i) => i + startAt) : [];\r\n};\r\n\r\nexport default range;\r\n","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\nimport moment from \"moment\";\r\n\r\nconst YearMonthDay = ({ month, day }) => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n\r\n  const isToday = () => {\r\n    return moment({\r\n      year: currentDate.year(),\r\n      month: parseInt(moment().month(month).format(\"MM\")) - 1,\r\n      day: day,\r\n    }).isSame(moment(), \"day\");\r\n  };\r\n\r\n  const getClassNameToday = () => {\r\n    if (isToday()) {\r\n      if (day >= 10) {\r\n        return \"day-today double-number\";\r\n      } else {\r\n        return \"day-today\";\r\n      }\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <Col className=\"month\" s={1}>\r\n    //   <div className={getClassNameToday()}>{day}</div>\r\n    // </Col>\r\n    <div className=\"day\">\r\n      <div className={getClassNameToday()}>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearMonthDay;\r\n","import React, { useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\n\r\nconst YearSmallDays = ({ month }) => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n\r\n  let smallDays = [\"l\", \"m\", \"m\", \"j\", \"v\", \"s\", \"d\"];\r\n\r\n  const getFirstDayOfMonth = () => {\r\n    return moment({ ...currentDate })\r\n      .month(month)\r\n      .weekday() === 0\r\n      ? 7\r\n      : moment({ ...currentDate })\r\n          .month(month)\r\n          .weekday();\r\n  };\r\n\r\n  const firstDayOfMonth = getFirstDayOfMonth();\r\n  smallDays = smallDays\r\n    .slice(firstDayOfMonth - 1, smallDays.length)\r\n    .concat(smallDays.slice(0, firstDayOfMonth - 1));\r\n\r\n  return (\r\n    <div className=\"header-small-days\">\r\n      {smallDays.map((day, index) => (\r\n        <div key={index} className=\"year-day\">\r\n          {day}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearSmallDays;\r\n","import React, { useContext } from \"react\";\r\nimport { Col } from \"react-materialize\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\nimport range from \"../../utils/range\";\r\nimport YearMonthDay from \"./YearMonthDay\";\r\nimport moment from \"moment\";\r\nimport YearSmallDays from \"./YearSmallDays\";\r\n\r\nconst YearMonth = ({ month }) => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n  const days = range(\r\n    moment({ ...currentDate })\r\n      .month(month)\r\n      .daysInMonth(),\r\n    1\r\n  );\r\n\r\n  return (\r\n    <Col className=\"month\" s={12} m={3}>\r\n      <h4\r\n        className={\r\n          moment().format(\"MMMM\") === month &&\r\n          currentDate.year() === moment().year()\r\n            ? \"capitalize teal-text\"\r\n            : \"capitalize\"\r\n        }\r\n      >\r\n        {month}\r\n      </h4>\r\n      <YearSmallDays month={month} />\r\n      <div className=\"month-days\">\r\n        {days.map((day, index) => (\r\n          <YearMonthDay month={month} day={day} key={index} />\r\n        ))}\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default YearMonth;\r\n","import React, { useContext } from \"react\";\r\nimport moment from \"moment\";\r\nimport YearMonth from \"./YearMonth\";\r\nimport { Row } from \"react-materialize\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\n\r\nconst Year = () => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div className=\"year-calendar\">\r\n      <h4 className=\"teal-text\">\r\n        <strong>{currentDate.year()}</strong>\r\n      </h4>\r\n      <Row>\r\n        {moment.months().map((month, index) => (\r\n          <YearMonth month={month} key={index} />\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Year;\r\n","import React, { useContext } from \"react\";\r\n// import MonthDay from \"./MonthDay\";\r\nimport range from \"../../utils/range\";\r\nimport { Table } from \"react-materialize\";\r\nimport ThemeContext from \"../../../../context/ThemeContext\";\r\nimport moment from \"moment\";\r\n\r\nconst Month = () => {\r\n  const { currentDate } = useContext(ThemeContext);\r\n\r\n  const month = currentDate.format(\"MMMM\");\r\n  const year = currentDate.year();\r\n  const weekdays = moment.weekdays(true);\r\n  const weekdaysShort = moment.weekdaysShort(true);\r\n\r\n  const getFirstDayOfMonth = () => {\r\n    return moment({ ...currentDate })\r\n      .month(month)\r\n      .weekday() === 0\r\n      ? 7\r\n      : moment({ ...currentDate })\r\n          .month(month)\r\n          .weekday();\r\n  };\r\n\r\n  const getDaysOfMonth = () => {\r\n    let days = [];\r\n    const indexes = [7, 14, 21, 28, 35, 42];\r\n    const daysOfMonth = range(currentDate.daysInMonth(), 1);\r\n    const countPreviousMonth = moment({ ...currentDate })\r\n      .month(month)\r\n      .subtract(1, \"month\")\r\n      .daysInMonth();\r\n    const firstDayOfMonth = getFirstDayOfMonth();\r\n    const daysOfPreviousMonth = range(\r\n      firstDayOfMonth - 1,\r\n      countPreviousMonth + 2 - firstDayOfMonth\r\n    );\r\n    const daysOfPreviousMonthFinal = daysOfPreviousMonth.map((day) => ({\r\n      isInMonth: false,\r\n      number: day,\r\n    }));\r\n    const daysOfMonthBefore = daysOfMonth.map((day) => ({\r\n      isInMonth: true,\r\n      number: day,\r\n    }));\r\n    const daysOfMonthFinal = daysOfPreviousMonthFinal.concat(daysOfMonthBefore);\r\n\r\n    indexes.forEach((index, key) => {\r\n      days[key] = daysOfMonthFinal.slice(index - 7, index);\r\n    });\r\n\r\n    return days;\r\n  };\r\n\r\n  const isToday = (day) => {\r\n    return moment({\r\n      year: currentDate.year(),\r\n      month: parseInt(currentDate.format(\"MM\")) - 1,\r\n      day: day.number,\r\n    }).isSame(moment(), \"day\");\r\n  };\r\n\r\n  const getClassNameToday = (day) => {\r\n    let className = \"\";\r\n    className += day.isInMonth ? \"in-month\" : \"out-of-month\";\r\n    if (isToday(day)) {\r\n      className += \" day-today\";\r\n      if (day.number >= 10) {\r\n        className += \" double-number\";\r\n      }\r\n    }\r\n    return className;\r\n  };\r\n\r\n  const days = getDaysOfMonth();\r\n\r\n  return (\r\n    <div className=\"month-calendar\">\r\n      <h4 className=\"capitalize\">\r\n        <span\r\n          className={\r\n            month === moment().format(\"MMMM\") &&\r\n            currentDate.year() === moment().year()\r\n              ? \"amber-text\"\r\n              : \"teal-text\"\r\n          }\r\n        >\r\n          <strong>{month}</strong>\r\n        </span>{\" \"}\r\n        {year}\r\n      </h4>\r\n      <Table className=\"centered hide-on-small-only\">\r\n        <thead>\r\n          <tr>\r\n            {weekdays.map((day, index) => (\r\n              <th data-field=\"day\" key={index} className=\"capitalize\">\r\n                {day}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {days.map((week, key) => (\r\n            <tr key={key}>\r\n              {week.map((day, index) => (\r\n                <td className={getClassNameToday(day)} key={index}>\r\n                  {day.number}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <Table className=\"centered hide-on-med-and-up\">\r\n        <thead>\r\n          <tr>\r\n            {weekdaysShort.map((day, index) => (\r\n              <th data-field=\"day\" key={index} className=\"capitalize\">\r\n                {day}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {days.map((week, key) => (\r\n            <tr key={key}>\r\n              {week.map((day, index) => (\r\n                <td className={getClassNameToday(day)} key={index}>\r\n                  {day.number}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n","import React, { useContext } from \"react\";\r\nimport { Button, Icon, Row } from \"react-materialize\";\r\nimport moment from \"moment\";\r\nimport ThemeContext from \"../../../context/ThemeContext\";\r\n\r\nconst Controls = () => {\r\n  const { period, currentDate, setCurrentDate } = useContext(ThemeContext);\r\n\r\n  const newDate = moment({ ...currentDate });\r\n  return (\r\n    <Row className=\"center-align\" style={{ marginTop: \"30px\" }}>\r\n      <Button\r\n        className=\"teal darken-1\"\r\n        onClick={() => setCurrentDate(moment())}\r\n      >\r\n        Aujourd'hui\r\n      </Button>\r\n      <Button\r\n        className=\"teal darken-1\"\r\n        style={{ marginLeft: \"25px\", marginRight: \"5px\" }}\r\n        onClick={() => setCurrentDate(newDate.subtract(1, period))}\r\n      >\r\n        <Icon>chevron_left</Icon>\r\n      </Button>\r\n      <Button\r\n        className=\"teal darken-1\"\r\n        onClick={() => setCurrentDate(newDate.add(1, period))}\r\n      >\r\n        <Icon>chevron_right</Icon>\r\n      </Button>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../../../context/ThemeContext\";\r\nimport Year from \"./year/Year\";\r\nimport Month from \"./month/Month\";\r\nimport Controls from \"./Controls\";\r\n\r\nconst Calendar = ({ events }) => {\r\n  const { period } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <>\r\n      {period === \"year\" && <Controls />}\r\n      <div className={period !== \"year\" ? \"hide\" : \"\"}>\r\n        <Year />\r\n      </div>\r\n      <div className={period !== \"month\" ? \"hide\" : \"\"}>\r\n        <Month />\r\n      </div>\r\n      {/*<div style={{ marginTop: \"30px\" }}>*/}\r\n      <Controls />\r\n      {/*</div>*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import ListReservations from \"./pages/reservations/ListReservations\";\r\nimport Agenda from \"./pages/calendar/Agenda\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    component: Agenda,\r\n  },\r\n  {\r\n    path: \"/reservations\",\r\n    exact: true,\r\n    component: ListReservations,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useEasybase } from \"easybase-react\";\r\nimport Calendar from \"./Calendar\";\r\nimport DataLoader from \"../utils/DataLoader\";\r\n\r\nconst Agenda = () => {\r\n  const [isLoading, setIsloading] = useState(true);\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const { Query } = useEasybase();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsloading(true);\r\n      const res = await Query({\r\n        queryName: \"confirmed\",\r\n        tableName: \"RESERVATION\",\r\n      });\r\n      // let eventsArray = [];\r\n      // res &&\r\n      //   res.length &&\r\n      //   res.forEach(\r\n      //     (resa) =>\r\n      //       eventsArray.push({\r\n      //         id: resa._id,\r\n      //         color: \"#1ccb9e\",\r\n      //         from: moment(resa.datebegin).format(\"YYYY-MM-DD\"),\r\n      //         to: moment(resa.dateend).format(\"YYYY-MM-DD\"),\r\n      //         title: resa.username,\r\n      //       })\r\n      //   );\r\n      setEvents(res);\r\n      setIsloading(false);\r\n    })();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return isLoading ? (\r\n    <DataLoader />\r\n  ) : events ? (\r\n    <Calendar events={events} />\r\n  ) : null;\r\n};\r\n\r\nexport default Agenda;\r\n","import React, { useContext } from \"react\";\r\nimport { Icon, Navbar, Switch } from \"react-materialize\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ThemeContext from \"../../context/ThemeContext\";\r\n// import logo from \"./../../img/logo3.png\";\r\n\r\nconst Menu = () => {\r\n  const { period, setPeriod } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div id=\"menu-navbar\">\r\n      <Navbar\r\n        alignLinks=\"right\"\r\n        brand={\r\n          <div className=\"brand-logo\">\r\n            <Icon medium className=\"teal-text text-darken-3\">\r\n              house\r\n            </Icon>\r\n            <span>Camprieu</span>\r\n            {/*<img src={logo} alt=\"logo\"></img>*/}\r\n          </div>\r\n        }\r\n        id=\"mobile-nav\"\r\n        menuIcon={<Icon>menu</Icon>}\r\n        style={{ backgroundColor: \"#26a69a\" }}\r\n      >\r\n        <Switch\r\n          id=\"switch-theme\"\r\n          offLabel=\"Année\"\r\n          onChange={() => {\r\n            setPeriod(period === \"month\" ? \"year\" : \"month\");\r\n          }}\r\n          onLabel=\"Mois\"\r\n          checked={period === \"month\"}\r\n        />\r\n        <Link to={\"/\"}>Calendrier</Link>\r\n        <Link to={\"/reservations\"}>Réservations</Link>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import moment from \"moment\";\r\n\r\nmoment.locale(\"fr\", {\r\n  months: \"janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre\".split(\r\n    \"_\"\r\n  ),\r\n  monthsShort: \"janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.\".split(\r\n    \"_\"\r\n  ),\r\n  monthsParseExact: true,\r\n  weekdays: \"dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi\".split(\"_\"),\r\n  weekdaysShort: \"dim._lun._mar._mer._jeu._ven._sam.\".split(\"_\"),\r\n  weekdaysMin: \"Di_Lu_Ma_Me_Je_Ve_Sa\".split(\"_\"),\r\n  weekdaysParseExact: true,\r\n  longDateFormat: {\r\n    LT: \"HH:mm\",\r\n    LTS: \"HH:mm:ss\",\r\n    L: \"DD/MM/YYYY\",\r\n    LL: \"D MMMM YYYY\",\r\n    LLL: \"D MMMM YYYY HH:mm\",\r\n    LLLL: \"dddd D MMMM YYYY HH:mm\",\r\n  },\r\n  calendar: {\r\n    sameDay: \"[Aujourd’hui à] LT\",\r\n    nextDay: \"[Demain à] LT\",\r\n    nextWeek: \"dddd [à] LT\",\r\n    lastDay: \"[Hier à] LT\",\r\n    lastWeek: \"dddd [dernier à] LT\",\r\n    sameElse: \"L\",\r\n  },\r\n  relativeTime: {\r\n    future: \"dans %s\",\r\n    past: \"il y a %s\",\r\n    s: \"quelques secondes\",\r\n    m: \"une minute\",\r\n    mm: \"%d minutes\",\r\n    h: \"une heure\",\r\n    hh: \"%d heures\",\r\n    d: \"un jour\",\r\n    dd: \"%d jours\",\r\n    M: \"un mois\",\r\n    MM: \"%d mois\",\r\n    y: \"un an\",\r\n    yy: \"%d ans\",\r\n  },\r\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\r\n  ordinal: function (number) {\r\n    return number + (number === 1 ? \"er\" : \"e\");\r\n  },\r\n  meridiemParse: /PD|MD/,\r\n  isPM: function (input) {\r\n    return input.charAt(0) === \"M\";\r\n  },\r\n  // In case the meridiem units are not separated around 12, then implement\r\n  // this function (look at locale/id.js for an example).\r\n  // meridiemHour : function (hour, meridiem) {\r\n  //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\r\n  // },\r\n  meridiem: function (hours, minutes, isLower) {\r\n    return hours < 12 ? \"PD\" : \"MD\";\r\n  },\r\n  week: {\r\n    dow: 1, // Monday is the first day of the week.\r\n    doy: 4, // Used to determine first week of the year.\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport ThemeContext from \"../ThemeContext\";\r\nimport moment from \"moment\";\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [period, setPeriod] = useState(\"month\");\r\n  const [currentDate, setCurrentDate] = useState(moment().date(1));\r\n  const value = { period, setPeriod, currentDate, setCurrentDate };\r\n\r\n  moment.locale(\"fr\");\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import \"../App.scss\";\r\nimport { EasybaseProvider } from \"easybase-react\";\r\nimport ebconfig from \"../ebconfig\";\r\nimport routes from \"./allRoutes\";\r\nimport { Container } from \"react-materialize\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport M from \"materialize-css\";\r\nimport Menu from \"./menu/Menu\";\r\nimport \"./pages/utils/momentLocaleFr\";\r\nimport ThemeContextProvider from \"../context/provider/ThemeContextProvider\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <ThemeContextProvider>\r\n      <EasybaseProvider ebconfig={ebconfig}>\r\n        <div className=\"hide\">{M.version}</div>\r\n        <Menu />\r\n        <Container id=\"mainContainer\" style={{ padding: \"15px\" }}>\r\n          <Switch>\r\n            {routes.map((route, index) => (\r\n              <Route\r\n                key={index}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                children={<route.component />}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </Container>\r\n      </EasybaseProvider>\r\n    </ThemeContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"./App.scss\";\r\nimport \"react-materialize\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Main from \"./Main\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}